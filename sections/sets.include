<section>
<h2 id="sets">Sets</h2>

<p class="note">Note: Yes, the name {{DOMTokenList}} is an unfortunate legacy mishap.


<h3 id="sets-interface-domtokenlist">Interface {{DOMTokenList}}</h3>

<pre class='idl'>
interface DOMTokenList {
  readonly attribute unsigned long length;
  getter DOMString? item(unsigned long index);
  boolean contains(DOMString token);

  void add(DOMString... tokens);
  void remove(DOMString... tokens);

  boolean toggle(DOMString token, optional boolean force);
  void replace(DOMString token, DOMString newToken);

  boolean supports(DOMString token);

  stringifier attribute DOMString value;
  iterable&lt;DOMString>;
};
</pre>

<p>A {{DOMTokenList}} object has an associated of <dfn>token set</dfn> (an <a>ordered set</a>), which is initially empty.

<p>A {{DOMTokenList}} object also has an associated <a href="#concept-element">element</a> and an <a href="#concept-attribute">attribute</a>'s <a href="#attribute-local-name">local name</a>.

<p><a>Specifications</a> may define <dfn>supported tokens</dfn> for a {{DOMTokenList}}'s associated <a href="#concept-attribute">attribute</a>'s <a href="#attribute-local-name">local name</a>.

<p>A {{DOMTokenList}} object's <dfn>validation steps</dfn> for a given <var>token</var> are:

<ol>
 <li>If the associated <a href="#concept-attribute">attribute</a>'s <a href="#attribute-local-name">local name</a> does not define <a>supported tokens</a>, then <a>throw</a> a "<code><a>TypeError</a></code>".

 <li>Let <var>lowercase token</var> be a copy of <var>token</var>, in <a>ASCII lowercase</a>.

 <li>If <var>lowercase token</var> is present in <a>supported tokens</a>, return true.

 <li>Return false.
</ol>

<p>A {{DOMTokenList}} object's <dfn>update steps</dfn> are to <a>set an attribute value</a> for the associated <a href="#concept-element">element</a> using associated <a href="#concept-attribute">attribute</a>'s <a href="#attribute-local-name">local name</a> and the result of running the <a>ordered set serializer</a> for <a>token set</a>.

<p>A {{DOMTokenList}} object's <dfn>serialize steps</dfn> are to return the result of running <a>get an attribute value</a> given the associated <a href="#concept-element">element</a> and the associated <a href="#concept-attribute">attribute</a>'s <a href="#attribute-local-name">local name</a>.

<dl>
 <dt><var>tokenlist</var> . {{DOMTokenList/length}}
 <dd>
  <p>Returns the number of tokens.

 <dt><var>tokenlist</var> . {{DOMTokenList/item(index)}}
 <dt><var>tokenlist</var>[<var>index</var>]
 <dd>
  <p>Returns the token with index <var>index</var>.

 <dt><var>tokenlist</var> . {{DOMTokenList/contains(token)}}
 <dd>
  <p>Returns true if <var>token</var> is present, and false otherwise.

 <dt><var>tokenlist</var> . <a for=DOMTokenList lt="add()">add(<var>tokens</var>&hellip;)</a>
 <dd>
  <p>Adds all arguments passed, except those already present.
  <p>Throws a <code><a>SyntaxError</a></code> if one of the arguments is the empty string.
  <p>Throws an <code><a>InvalidCharacterError</a></code> if one of the arguments contains any <a>ASCII whitespace</a>.

 <dt><var>tokenlist</var> . <a for=DOMTokenList lt="remove()">remove(<var>tokens</var>&hellip;)</a>
 <dd>
  <p>Removes arguments passed, if they are present.
  <p>Throws a <code><a>SyntaxError</a></code> if one of the arguments is the empty string.
  <p>Throws an <code><a>InvalidCharacterError</a></code> if one of the arguments contains any <a>ASCII whitespace</a>.

 <dt><var>tokenlist</var> . <a method for=DOMTokenList lt="toggle()">toggle(<var>token</var> [, <var>force</var>])</a>
 <dd>
  <p>If <var>force</var> is not given, "toggles" <var>token</var>, removing it if it's present and adding it if it's not. If <var>force</var> is true, adds <var>token</var> (same as <code><a>add()</a></code>).  If <var>force</var> is false, removes <var>token</var> (same as <code><a>remove()</a></code>). <p>Returns true if <var>token</var> is now present, and false otherwise.
  <p>Throws a <code><a>SyntaxError</a></code> if <var>token</var> is empty.
  <p>Throws an <code><a>InvalidCharacterError</a></code> if <var>token</var> contains any spaces.

 <dt><var>tokenlist</var> . {{DOMTokenList/replace(token, newToken)}}
 <dd>
  <p>Replaces <var>token</var> with <var>newToken</var>.
  <p>Throws a <code><a>SyntaxError</a></code> if one of the arguments is the empty string.
  <p>Throws an <code><a>InvalidCharacterError</a></code> if one of the arguments contains any <a>ASCII whitespace</a>.

 <dt><var>tokenlist</var> . {{DOMTokenList/supports(token)}}
 <dd>
  <p>Returns true if <var>token</var> is in the associated attributeâ€™s supported tokens. Returns false otherwise.
  <p>Throws a <code><a>TypeError</a></code> if the associated attribute has no supported tokens defined.

 <dt><var>tokenlist</var> . {{DOMTokenList/value}}
 <dd>
  <p>Returns the associated set as string.
  <p>Can be set, to change the associated set.
</dl>

<div>

<p>The <dfn attribute id="domtokenlist-length" for=DOMTokenList>length</dfn> attribute's getter must return the number of tokens in the <a>context object</a>'s <a>token set</a>.

<p>The object's <a>supported property indices</a> are the numbers in the range zero to the number of tokens in <a>token set</a> minus one, unless <a>token set</a> is  empty, in which case there are no <a>supported property indices</a>.

<p>The <dfn method for=DOMTokenList id="domtokenlist-item">item(<var>index</var>)</dfn> method, when invoked, must run these steps:

<ol>
 <li><p>If <var>index</var> is equal to or greater than the number of tokens in <a>token set</a>, then return null.

 <li><p>Return the <var>index</var>th token in the <a>context object</a>'s <a>token set</a>.
</ol>

<p>The <dfn method for=DOMTokenList id="set-contains-func">contains(<var>token</var>)</dfn> method, when invoked, must return true if <var>token</var> is in <a>token set</a>,
and false otherwise.

<p>The <dfn method for=DOMTokenList>add(<var>tokens</var>&hellip;)</dfn> method, when invoked, must run these steps:

<ol>
 <li><p>For each <var>token</var> in <var>tokens</var>:

 <ol>
  <li><p>If <var>token</var> is the empty string, then <a>throw</a> a <code><a>SyntaxError</a></code>.

  <li><p>If <var>token</var> contains any <a>ASCII whitespace</a>, then <a>throw</a> an "<code><a>InvalidCharacterError</a></code>.
 </ol>

 <li><p>For each <var>token</var> in <var>tokens</var>, append <var>token</var> to <a>token set</a>.

 <li><p>Run the <a>update steps</a>.
</ol>

<p>The <dfn method for=DOMTokenList id="set-remove-func">remove(<var>tokens</var>&hellip;)</dfn> method, when invoked, must run these steps:

<ol>
 <li><p>For each <var>token</var> in <var>tokens</var>:

 <ol>
  <li><p>If <var>token</var> is the empty string, then <a>throw</a> a <code><a>SyntaxError</a></code>.

  <li><p>If <var>token</var> contains any <a>ASCII whitespace</a>, then <a>throw</a> an <code><a>InvalidCharacterError</a></code>.
 </ol>

 <li><p>For each <var>token</var> in <var>tokens</var>, remove <var>token</var> from <a>token set</a>.

 <li><p>Run the <a>update steps</a>.
</ol>

<p>The <dfn method for=DOMTokenList>toggle(<var>token</var>, <var>force</var>)</dfn> method, when invoked, must run these steps:

<ol>
 <li><p>If <var>token</var> is the empty string, then <a>throw</a> a <code><a>SyntaxError</a></code>.

 <li><p>If <var>token</var> contains any <a>ASCII whitespace</a>, then <a>throw</a> an <code><a>InvalidCharacterError</a></code>.

 <li><p>Let <var>result</var> be false.

 <li>
  <p>If <var>token</var> is in <a>token set</a>, then:

  <ol>
   <li><p>If <var>force</var> is either not given or is false, then remove <var>token</var> from <a>token set</a>.

   <li><p>Otherwise, set <var>result</var> to true.
  </ol>

 <li>
  <p>Otherwise, if <var>force</var> is either not given or is true, append <var>token</var> to <a>token set</a> and set <var>result</var> to true.

 <li><p>Run the <a>update steps</a>.

 <li>Return <var>result</var>.
</ol>

<p>The <dfn method for=DOMTokenList id="set-replace-func">replace(<var>token</var>, <var>newToken</var>)</dfn>
method, when invoked, must run these steps:

<ol>
 <li><p>If <var>token</var> is the empty string, then <a>throw</a> a <code><a>SyntaxError</a></code>.

 <li><p>If <var>token</var> contains any <a>ASCII whitespace</a>, then <a>throw</a> an <code><a>InvalidCharacterError</a></code>.

 <li><p><a href="#ordered-set-replace">Replace</a> <var>token</var> in <a>token set</a> with <var>newToken</var>.

 <li><p>Run the <a>update steps</a>.
</ol>

<p>The <dfn method for=DOMTokenList id="set-supports-func">supports(<var>token</var>)</dfn>
method, when invoked, must return the result of running <a>validation steps</a> for the given <var>token</var>.

<p>The <dfn attribute for=DOMTokenList id="domtokenlist-value">value</dfn> attribute's getter must return the result of running <a>context object</a>'s <a>serialize steps</a> for <a>token set</a>.

<p>Setting the {{DOMTokenList/value}} attribute must run the <a>ordered set parser</a> for the given value and set <a>token set</a> to the result.

</div>

</section>
